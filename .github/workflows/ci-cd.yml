name: CI/CD Pipeline

on:
  push:
    branches:
      - master # Trigger the workflow on push to the master branch
  pull_request:
    branches:
      - master # Trigger the workflow on pull requests to master

jobs:
  # Job to run tests, linting, and Prettier
  test_and_lint:
    runs-on: ubuntu-latest # Use the latest Ubuntu image for the job

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Use Node.js 16 (or whichever version you use)

      # Install dependencies
      - name: Install Dependencies
        run: |
          npm install

      # Run Prettier
      - name: Run Prettier Check
        run: |
          npx prettier --check .

      # Run ESLint
      - name: Run ESLint
        run: |
          npx eslint . --fix

      # Run Tests
      - name: Run Tests
        run: |
          npm test

  # Job to deploy to AWS Lambda
  deploy_to_lambda:
    runs-on: ubuntu-latest
    needs: test_and_lint # This ensures deployment only happens after tests pass

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Use Node.js 16 (or whichever version you use)

      # Install dependencies
      - name: Install Dependencies
        run: |
          npm install

      # Configure AWS CLI with IAM credentials
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1' # Use the AWS region you are deploying to

      # Deploy to AWS Lambda
      - name: Deploy to AWS Lambda
        run: |
          zip -r function.zip .  # Zip your Lambda function files
          aws lambda update-function-code --function-name your-lambda-function-name --zip-file fileb://function.zip
